[General]
network = ieee802154a
debug-on-errors = false
fname-append-host = false
**.module-eventlog-recording = false
**.vector-recording = true
#**.debug = false
num-rngs = 88
ned-path = ../../base;../../modules;../../examples;

# tkenv-default-run=1

# cmdenv-runs-to-execute=1
cmdenv-express-mode = true

# Because of the battery module, there are always scheduled events
# thus we need a fallback sim-time-limit.
# Otherwise the battery module will eventually lead to a simtime_t overflow
sim-time-limit=1 d # 30s for 10000 packets

ieee802154a.**.coreDebug = false
ieee802154a.playgroundSizeX = 500 m
ieee802154a.playgroundSizeY = 500 m 
ieee802154a.playgroundSizeZ = 500 m

ieee802154a.world.useTorus = false
ieee802154a.world.use2D = false

ieee802154a.channelControl.sendDirect = false
ieee802154a.channelControl.pMax = 1000 mW
ieee802154a.channelControl.sat = -100 dBm
ieee802154a.channelControl.alpha = 2.0
ieee802154a.channelControl.carrierFrequency = 4500e+6 Hz


ieee802154a.node[*].nic.phy.usePropagationDelay = false
ieee802154a.node[*].nic.phy.thermalNoise = 0 dBm
ieee802154a.node[*].nic.phy.useThermalNoise = false # we use our own thermal noise model
ieee802154a.node[*].nic.phy.timeRXToTX = 0.00021 s
ieee802154a.node[*].nic.phy.timeRXToSleep = 0.000031 s
ieee802154a.node[*].nic.phy.timeTXToRX = 0.00012 s
ieee802154a.node[*].nic.phy.timeTXToSleep = 0.000032 s
ieee802154a.node[*].nic.phy.timeSleepToRX = 0.000103 s
ieee802154a.node[*].nic.phy.timeSleepToTX = 0.000203 s
ieee802154a.node[*].nic.phy.maxTXPower = 1 mW # not used currently but required by BasePhyLayer
ieee802154a.node[*].nic.phy.sensitivity = 0.1 dBm # useless but required by BasePhyLayer
ieee802154a.node[*].nic.phy.initialRadioState = 0

***.debug = false

**.battery.nominal = 99999mAh
**.battery.capacity = 99999mAh
**.battery.voltage = 3.3V
**.battery.resolution = 10s
**.battery.publishDelta = 0.1
**.battery.publishTime = 0
**.battery.numDevices = 1  # only the PHY module uses energy from the battery
**.batteryStats.debug = false
**.batteryStats.detail = false
**.batteryStats.timeSeries = false

ieee802154a.node[*].nic.connectionManagerName = "channelControl"

ieee802154a.node[*].nic.mac.headerLength = 16 bit
ieee802154a.node[*].nic.mac.maxRetries = 1
ieee802154a.node[0].nic.mac.stats = true
ieee802154a.node[*].nic.mac.stats = false
ieee802154a.node[*].nic.mac.trace = false
ieee802154a.node[*].nic.mac.debug = false

ieee802154a.node[*].app.trafficParam = 1
ieee802154a.node[0].app.nodeAddr = 0
ieee802154a.node[1].app.nodeAddr = 1

ieee802154a.node[*].app.debug = false
ieee802154a.node[*].app.flood = false

ieee802154a.node[*].app.stats = false
ieee802154a.node[*].app.trace = false
ieee802154a.node[*].app.payloadSize = 8 byte

## Nodes positions
ieee802154a.node[0].mobility.x = 0
ieee802154a.node[0].mobility.y = 0
ieee802154a.node[0].mobility.z = 0
ieee802154a.node[1].mobility.y = 0
ieee802154a.node[1].mobility.z = 0

[Config BERDistance]
description = "Evaluates the bit error rate as a function of distance with various channel models."
ieee802154a.node[1].app.payloadSize = 8 byte
ieee802154a.node[*].app.dstAddr = 0
**.numHosts = 2
ieee802154a.node[1].mobility.x = ${distance=1..10 step 1, 25..100 step 25} 
ieee802154a.node[0].app.nbPackets = 0
ieee802154a.node[1].app.nbPackets = ${nbPackets=250}
ieee802154a.node[*].nic.phy.analogueModels = xmldoc("channels/${Channel=ghassemzadeh-los,ghassemzadeh-nlos}.xml")
ieee802154a.node[*].nic.phy.decider = xmldoc("receivers/${Receiver=3dB}.xml")

[Config channelPlots]
description = "Sends one packet per channel and traces all points at reception."
ieee802154a.node[*].app.dstAddr = 0
**.numHosts = 2
ieee802154a.node[1].app.payloadSize = ${packetSize=120} byte
ieee802154a.node[1].mobility.x = ${distance=10}
ieee802154a.node[1].app.nbPackets = ${nbPackets=1}
ieee802154a.node[0].app.nbPackets = 0
sim-time-limit=10 s
ieee802154a.node[*].nic.phy.analogueModels = xmldoc("channels/${Channel=ghassemzadeh-los,ghassemzadeh-nlos,cm1,cm2,cm5}.xml")
ieee802154a.node[*].nic.phy.decider = xmldoc("receivers/${Receiver=3dB}-trace.xml") # sync always succeeds
ieee802154a.node[1].nic.phy.vector-recording = true
