//
// Generated file, do not edit! Created by opp_msgc 4.1 from messages/UWBIRMacPkt.msg.
//

#ifndef _UWBIRMACPKT_M_H_
#define _UWBIRMACPKT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <MacPkt_m.h>
// }}



/**
 * Class generated from <tt>messages/UWBIRMacPkt.msg</tt> by opp_msgc.
 * <pre>
 * message UWBIRMacPkt extends MacPkt
 * {
 *     @customize(true);
 *     abstract bool bitValues[];
 *     int nbSymbols;
 * }
 * </pre>
 *
 * UWBIRMacPkt_Base is only useful if it gets subclassed, and UWBIRMacPkt is derived from it.
 * The minimum code to be written for UWBIRMacPkt is the following:
 *
 * <pre>
 * class UWBIRMacPkt : public UWBIRMacPkt_Base
 * {
 *   public:
 *     UWBIRMacPkt(const char *name=NULL, int kind=0) : UWBIRMacPkt_Base(name,kind) {}
 *     UWBIRMacPkt(const UWBIRMacPkt& other) : UWBIRMacPkt_Base(other.getName()) {operator=(other);}
 *     UWBIRMacPkt& operator=(const UWBIRMacPkt& other) {UWBIRMacPkt_Base::operator=(other); return *this;}
 *     virtual UWBIRMacPkt *dup() const {return new UWBIRMacPkt(*this);}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from UWBIRMacPkt_Base
 * };
 * </pre>
 *
 * The following should go into a .cc (.cpp) file:
 *
 * <pre>
 * Register_Class(UWBIRMacPkt);
 * </pre>
 */
class UWBIRMacPkt_Base : public ::MacPkt
{
  protected:
    int nbSymbols_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const UWBIRMacPkt_Base&);
    // make constructors protected to avoid instantiation
    UWBIRMacPkt_Base(const char *name=NULL, int kind=0);
    UWBIRMacPkt_Base(const UWBIRMacPkt_Base& other);
    // make assignment operator protected to force the user override it
    UWBIRMacPkt_Base& operator=(const UWBIRMacPkt_Base& other);

  public:
    virtual ~UWBIRMacPkt_Base();
    virtual UWBIRMacPkt_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class UWBIRMacPkt");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setBitValuesArraySize(unsigned int size) = 0;
    virtual unsigned int getBitValuesArraySize() const = 0;
    virtual bool getBitValues(unsigned int k) const = 0;
    virtual void setBitValues(unsigned int k, bool bitValues_var) = 0;
    virtual int getNbSymbols() const;
    virtual void setNbSymbols(int nbSymbols_var);
};


#endif // _UWBIRMACPKT_M_H_
